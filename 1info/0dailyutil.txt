netstat -ano | findstr 8080
taskkill /F /pid 6684

"pattern": "[\\w\\s\\-#:;'\\/,.$]*"

equals
--------------------
org.apache.commons.lang3.StringUtils.equalsAnyIgnoreCase("COnstant",varValue)

Check null pointer
--------------------
can we use Objects::nonNull  for string

Java.utils
Objects::nonNull - true if nonNull

spring framework StringUtil.isEmpty -  
spring framework CollectionUtils.isEmpty - true if null or empty


collection
------------------------------------------------------------------------------------------------------------------------------------------------
List<String> l = new ArrayList();
List<String> l = Lists.newArrayList();com.google.common.collect //mutable
List<String> l = Lists.newArrayList(Obj);or.assertj.core.util.Lists //mutable

List<String> list = Arrays.asList(new String[]{"foo", "bar"}); //list from array
List<String> list = Arrays.asList("foo", "bar"); //list from fixed objects
List<String> list = List.of("foo", "bar", "baz");//list from list interface java9  immutable
Set<String> set = Set.of("foo", "bar", "baz");//Set from Set interface java9 immutable

immutable
	Collections.unmodifiableList(list);
	List.of(list.toArray(new String[]{}));//java 9
	ListUtils.unmodifiableList(list);// apache commons

spring framework CollectionUtils.isEmpty - true if null or empty

streams
	.stream().forEach(obj -> {methodone(obj);});
	.stream().filter(x -> x != null).collect(Collectors.toList());
	.stream().map(ClassName::methodName).collect(Collectors.toList());
	.stream().map(obj ->
		if(condition){
			retrun obj.property;
		}
		return null;
	).filter(Objects::nonNull).collect(Collectors.toList());
	
	.strem()
			.filter(obj -> obj.getName().equals("options"))
			.map(obj -> obj.getProducts().stream()
					.filter(x -> x.getname().equals("PUT"))
					.map(x-> x.getId())
				)
			.flatMap(Function.identity()).collect(Collectors.toList());
	.stream()
		.filter(c1ob1 -> c2.stream().anyMatch(c2ob1-> c1ob1.getId().equals(c2ob1.getId())))
		.collect(Collectors.toList());
	
flatMap
collectors.joining()

---pricing service stream use service impl yet to look into it



TODO
--------
Arrays.copyOfRange